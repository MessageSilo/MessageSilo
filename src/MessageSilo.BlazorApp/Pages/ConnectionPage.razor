@using MessageSilo.BlazorApp.Components
@using MessageSilo.Shared.Enums
@page "/connection/{id}"

<Heading Size="HeadingSize.Is1" Margin="Margin.Is3.FromBottom">Connection</Heading>

@if (ConnectionSettings != null)
{
    <Row>
        <Column>
            <Heading Size="HeadingSize.Is2">Details</Heading>
        </Column>
    </Row>
    <Row>
        <Column>
            <Validations Mode="ValidationMode.Auto" Model="@ConnectionSettings">
                <Validation>
                    <Field Horizontal>
                        <FieldLabel ColumnSize="ColumnSize.Is2">Id</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <Strong>@ConnectionSettings.Id</Strong>
                        </FieldBody>
                    </Field>
                </Validation>
                <Validation>
                    <Field Horizontal>
                        <FieldLabel ColumnSize="ColumnSize.Is2">Name</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <TextEdit Placeholder="My corrector" @bind-Text="@ConnectionSettings.RowKey">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                    </Field>
                </Validation>
                @switch (ConnectionSettings.Type)
                {
                    case MessagePlatformType.Azure_Queue:
                        {
                            <Validation>
                                <Field Horizontal>
                                    <FieldLabel ColumnSize="ColumnSize.Is2">Queue Name</FieldLabel>
                                    <FieldBody ColumnSize="ColumnSize.Is10">
                                        <TextEdit Placeholder="My queue" @bind-Text="@ConnectionSettings.QueueName">
                                            <Feedback>
                                                <ValidationError />
                                            </Feedback>
                                        </TextEdit>
                                    </FieldBody>
                                </Field>
                            </Validation>
                        }
                        break;
                    case MessagePlatformType.Azure_Topic:
                        {
                            <Validation>
                                <Field Horizontal>
                                    <FieldLabel ColumnSize="ColumnSize.Is2">Topic Name</FieldLabel>
                                    <FieldBody ColumnSize="ColumnSize.Is10">
                                        <TextEdit Placeholder="My topic" @bind-Text="@ConnectionSettings.TopicName">
                                            <Feedback>
                                                <ValidationError />
                                            </Feedback>
                                        </TextEdit>
                                    </FieldBody>
                                </Field>
                            </Validation>
                            <Validation>
                                <Field Horizontal>
                                    <FieldLabel ColumnSize="ColumnSize.Is2">Subscription Name</FieldLabel>
                                    <FieldBody ColumnSize="ColumnSize.Is10">
                                        <TextEdit Placeholder="My subscription" @bind-Text="@ConnectionSettings.SubscriptionName">
                                            <Feedback>
                                                <ValidationError />
                                            </Feedback>
                                        </TextEdit>
                                    </FieldBody>
                                </Field>
                            </Validation>
                        }
                        break;
                }
                <Validation>
                    <Field Horizontal>
                        <FieldLabel ColumnSize="ColumnSize.Is2">Connection String</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <TextEdit Placeholder="Endpoint=sb://..." @bind-Text="@ConnectionSettings.ConnectionString">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                    </Field>
                </Validation>
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is2">Corrector Function</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">
                        <MemoEdit Text="@ConnectionSettings.CorrectorFuncBody" Rows="5" AutoSize />
                    </FieldBody>
                </Field>
                <Button Color="Color.Primary" Float="Float.End" Clicked="@(() => Save())">Save</Button>
            </Validations>
        </Column>
    </Row>
}

@if (CorrectedMessages != null)
{
    <Row>
        <Column>
            <Heading Size="HeadingSize.Is2">Messages</Heading>
        </Column>
    </Row>

    <Row>
        <Column>
            <Label>From</Label>
            <DatePicker TValue="DateTimeOffset" InputMode="DateInputMode.DateTime" SelectionMode="DateInputSelectionMode.Single" @bind-Date=@From />
        </Column>
        <Column>
            <Label>To</Label>
            <DatePicker TValue="DateTimeOffset" InputMode="DateInputMode.DateTime" SelectionMode="DateInputSelectionMode.Single" @bind-Date=@To />
        </Column>
        <Column>
            <Button Color="Color.Primary" Float="Float.End" Clicked="@(() => FilterMessages())">Filter</Button>
        </Column>
    </Row>

    <Row>
        <Column>
            <Accordion>
                @foreach (var item in CorrectedMessages)
                {
                    <Collapse Visible="@item.IsVisible">
                        <CollapseHeader>
                            <Heading Size="HeadingSize.Is6">
                                <Button Block Clicked="@(()=> item.IsVisible = !item.IsVisible)">@item.CorrectedMessage.Id</Button>
                            </Heading>
                        </CollapseHeader>
                        <CollapseBody>
                            <Row>
                                <Column ColumnSize="ColumnSize.IsHalf.OnDesktop">
                                    <Label>Before</Label>
                                    <MessageDisplayer OriginalMessage="@item.CorrectedMessage.Body" />
                                </Column>
                                <Column ColumnSize="ColumnSize.IsHalf.OnDesktop">
                                    <Label>After</Label>
                                    <MessageDisplayer OriginalMessage="@item.CorrectedMessage.BodyAfterCorrection" />
                                </Column>
                            </Row>
                        </CollapseBody>
                    </Collapse>
                }
            </Accordion>
        </Column>
    </Row>
}


