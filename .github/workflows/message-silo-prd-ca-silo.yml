name: Build and deploy .NET application to container app message-silo-prd-ca-silo

on: workflow_dispatch

env:
  CONTAINER_APP_CONTAINER_NAME: silo-container
  CONTAINER_APP_NAME: message-silo-prd-ca-silo
  CONTAINER_APP_RESOURCE_GROUP_NAME: message-silo-prd-rg-sponsor
  CONTAINER_REGISTRY_LOGIN_SERVER: messagesiloprdcrsponsor.azurecr.io
  PROJECT_NAME_FOR_DOCKER: messagesilo.silo
jobs:
  build:
    environment: prd
    runs-on: ubuntu-latest
    steps:
    - name: Checkout to the branch
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Transform appsettings
      uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '$('
        tokenSuffix: ')'
        files: '["**/appsettings.json"]'
      env:
        ConnectionStrings.AI: ${{ secrets.CONNECTIONSTRINGS_AI }}
        ConnectionStrings.GrainStateStorage: ${{ secrets.CONNECTIONSTRINGS_GRAINSTATESTORAGE }}

    - name: Display
      run: echo "${{ secrets.CONNECTIONSTRINGS_AI }}"

    - name: Publish
      run: dotnet publish ./src/MessageSilo.Silo/MessageSilo.Silo.csproj --configuration Release

    - name: Log in to container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USER }}
        password: ${{ secrets.ACR_PASS }}

    - name: Prepare Docker buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push image to registry
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.PROJECT_NAME_FOR_DOCKER }}:1.0.${{github.run_number}}
        file: src/MessageSilo.Silo/Dockerfile 

  deploy:
    environment: prd
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to containerapp
      uses: azure/CLI@v1
      with:
        inlineScript: >
          az config set extension.use_dynamic_install=yes_without_prompt

          az containerapp registry set --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --server ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} --username ${{ secrets.ACR_USER }} --password ${{ secrets.ACR_PASS }}

          az containerapp update --name ${{ env.CONTAINER_APP_NAME }} --container-name ${{ env.CONTAINER_APP_CONTAINER_NAME }} --resource-group ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --image ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.PROJECT_NAME_FOR_DOCKER }}:1.0.${{github.run_number}}

    - name: logout
      run: >
        az logout
